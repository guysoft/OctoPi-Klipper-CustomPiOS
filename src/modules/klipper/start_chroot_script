#!/usr/bin/env bash
# Klipper module
# Main section to install Klipper on top of OctoPi
# Written by Guy Sheffer <guysoft@gmail.com>
# GPL V3
########


# Source error handling, leave this in place
set -x
set -e

source /common.sh
install_cleanup_trap

unpack /filesystem/home/pi /home/"${BASE_USER}" "${BASE_USER}"

pushd /home/pi
  if [ "$KLIPPER_INCLUDE_KLIPPER" == "yes" ]
  then
    # Mostly taken from klipper/scripts/install-octopi.sh
    gitclone KLIPPER_REPO klipper
    apt-get update --allow-releaseinfo-change
    apt-get -y --allow-downgrades --allow-remove-essential --allow-change-held-packages install virtualenv python-dev libffi-dev build-essential libncurses-dev libusb-dev avrdude gcc-avr binutils-avr avr-libc stm32flash dfu-util libnewlib-arm-none-eabi gcc-arm-none-eabi binutils-arm-none-eabi libusb-1.0


    PYTHONDIR="/home/pi/klippy-env"
    virtualenv -p python2 ${PYTHONDIR}
    ${PYTHONDIR}/bin/pip install -r /home/pi/klipper/scripts/klippy-requirements.txt

    cp "/home/pi/klipper/scripts/klipper-start.sh" /etc/init.d/klipper
    update-rc.d klipper defaults


    DEFAULTS_FILE=/etc/default/klipper
    cat > $DEFAULTS_FILE <<EOF
# Configuration for /etc/init.d/klipper
KLIPPY_USER=pi
KLIPPY_EXEC=${PYTHONDIR}/bin/python
KLIPPY_ARGS="/home/pi/klipper/klippy/klippy.py /home/pi/printer.cfg -l /tmp/klippy.log"
EOF
  fi
  
  if [ "$KLIPPER_INCLUDE_OCTOKLIPPER_PLUGIN" == "yes" ]; then
    sudo -u pi /home/pi/oprint/bin/pip install "${KLIPPER_OCTOKLIPPER_URL}"
  fi
popd

